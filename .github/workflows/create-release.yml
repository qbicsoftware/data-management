name: Release new documentation version
on:
  workflow_dispatch:
    inputs:
      versionTag:
        description: 'Version Tag (semantic version)'
        required: true
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material mike
      - run: git fetch
      - run: mike set-default --allow-undefined ${{ github.event.inputs.versionTag }}
      - run: mike deploy --push --update-aliases ${{ github.event.inputs.versionTag }} latest

      - name: Create Release Notes
        if: ${{ !startsWith(github.ref, 'refs/tags/')
           && !( contains(github.event.inputs.versionTag, 'alpha')
           || contains(github.event.inputs.versionTag, 'beta')
           || contains(github.event.inputs.versionTag, 'rc')) }}
        uses: actions/github-script@v7
        with:
         github-token: ${{secrets.JOHNNY_Q5_REPORTS_TOKEN}}
         script: |
           await github.request(`POST /repos/${{ github.repository }}/releases`, {
             tag_name: "${{ github.event.inputs.versionTag }}",
             generate_release_notes: true
             });
